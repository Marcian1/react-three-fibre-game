{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Z0060883\\\\Downloads\\\\ping-pong-r3f-usecannon-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Z0060883\\\\Downloads\\\\ping-pong-r3f-usecannon-forked\\\\src\\\\App.js\";\n// react-three-fiber is a way to express threejs declaratively: https://github.com/react-spring/react-three-fiber\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\"; // use-cannon is a hook around the cannon.js physics library: https://github.com/react-spring/use-cannon\n\nimport { Physics, useSphere, useBox, usePlane } from \"use-cannon\"; // zustand is a minimal state-manager: https://github.com/react-spring/zustand\n\nimport create from \"zustand\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport React, { Suspense, useRef, useCallback } from \"react\";\nimport lerp from \"lerp\";\nimport clamp from \"lodash-es/clamp\";\nimport Text from \"./Text\";\nimport pingSound from \"./resources/ping.mp3\";\nimport earthImg from \"./resources/cross.jpg\"; // Create a store ...\n\nvar ping = new Audio(pingSound);\n\nvar _create = create(function (set) {\n  return {\n    count: 0,\n    welcome: true,\n    api: {\n      pong: function pong(velocity) {\n        ping.currentTime = 0;\n        ping.volume = clamp(velocity / 20, 0, 1);\n        ping.play();\n        if (velocity > 4) set(function (state) {\n          return {\n            count: state.count + 1\n          };\n        });\n      },\n      reset: function reset(welcome) {\n        return set(function (state) {\n          return {\n            welcome: welcome,\n            count: welcome ? state.count : 0\n          };\n        });\n      }\n    }\n  };\n}),\n    _create2 = _slicedToArray(_create, 1),\n    useStore = _create2[0]; // The paddle was made in blender and auto-converted to JSX by https://github.com/react-spring/gltfjsx\n\n\nfunction Paddle() {\n  // Load the gltf file\n  var _useLoader = useLoader(GLTFLoader, \"/pingpong.glb\"),\n      nodes = _useLoader.nodes,\n      materials = _useLoader.materials; // Fetch some reactive state\n\n\n  var _useStore = useStore(function (state) {\n    return state.api;\n  }),\n      pong = _useStore.pong;\n\n  var welcome = useStore(function (state) {\n    return state.welcome;\n  });\n  var count = useStore(function (state) {\n    return state.count;\n  });\n  var model = useRef(); // Make it a physical object that adheres to gravitation and impact\n\n  var _useBox = useBox(function () {\n    return {\n      type: \"Kinematic\",\n      args: [3.4, 1, 3.5],\n      onCollide: function onCollide(e) {\n        return pong(e.contact.impactVelocity);\n      }\n    };\n  }),\n      _useBox2 = _slicedToArray(_useBox, 2),\n      ref = _useBox2[0],\n      api = _useBox2[1]; // use-frame allows the component to subscribe to the render-loop for frame-based actions\n\n\n  var values = useRef([0, 0]);\n  useFrame(function (state) {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    values.current[0] = lerp(values.current[0], state.mouse.x * Math.PI / 5, 0.2);\n    values.current[1] = lerp(values.current[1], state.mouse.x * Math.PI / 5, 0.2);\n    api.position.set(state.mouse.x * 10, state.mouse.y * 5, 0);\n    api.rotation.set(0, 0, values.current[1]); // Left/right mouse movement rotates it a liitle for effect only\n\n    model.current.rotation.x = lerp(model.current.rotation.x, welcome ? Math.PI / 2 : 0, 0.2);\n    model.current.rotation.y = values.current[0];\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    dispose: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: model,\n    position: [-0.05, 0.37, 0.3],\n    scale: [0.15, 0.15, 0.15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, 1, 2],\n    size: 1,\n    children: count.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    rotation: [1.88, -0.35, 2.32],\n    scale: [2.97, 2.97, 2.97],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: nodes.Bone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: nodes.Bone003,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: nodes.Bone006,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: nodes.Bone010,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"skinnedMesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.glove,\n    \"material-roughness\": 1,\n    geometry: nodes.arm.geometry,\n    skeleton: nodes.arm.skeleton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    rotation: [0, -0.04, 0],\n    scale: [141.94, 141.94, 141.94],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.wood,\n    geometry: nodes.mesh_0.geometry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.side,\n    geometry: nodes.mesh_1.geometry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.foam,\n    geometry: nodes.mesh_2.geometry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.lower,\n    geometry: nodes.mesh_3.geometry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    material: materials.upper,\n    geometry: nodes.mesh_4.geometry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction Ball() {\n  // Load texture (the black plus sign)\n  var map = useLoader(THREE.TextureLoader, earthImg); // Make the ball a physics object with a low mass\n\n  var _useSphere = useSphere(function () {\n    return {\n      mass: 1,\n      args: 0.5,\n      position: [0, 5, 0]\n    };\n  }),\n      _useSphere2 = _slicedToArray(_useSphere, 1),\n      ref = _useSphere2[0];\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.5, 64, 64],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    map: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ContactGround() {\n  // When the ground was hit we reset the game ...\n  var _useStore2 = useStore(function (state) {\n    return state.api;\n  }),\n      reset = _useStore2.reset;\n\n  var _usePlane = usePlane(function () {\n    return {\n      type: \"Static\",\n      rotation: [-Math.PI / 2, 0, 0],\n      position: [0, -10, 0],\n      onCollide: function onCollide() {\n        return reset(true);\n      }\n    };\n  }),\n      _usePlane2 = _slicedToArray(_usePlane, 1),\n      ref = _usePlane2[0];\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default function () {\n  var welcome = useStore(function (state) {\n    return state.welcome;\n  });\n\n  var _useStore3 = useStore(function (state) {\n    return state.api;\n  }),\n      reset = _useStore3.reset;\n\n  var onClick = useCallback(function () {\n    return welcome && reset(false);\n  }, [welcome, reset]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    shadowMap: true,\n    sRGB: true,\n    camera: {\n      position: [0, 5, 12],\n      fov: 50\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"color\", {\n    attach: \"background\",\n    args: [\"#171720\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-10, -10, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    position: [10, 10, 10],\n    angle: 0.3,\n    penumbra: 1,\n    intensity: 1,\n    castShadow: true,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    \"shadow-bias\": -0.0001,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Physics, {\n    iterations: 20,\n    tolerance: 0.0001,\n    defaultContactMaterial: {\n      friction: 0.9,\n      restitution: 0.7,\n      contactEquationStiffness: 1e7,\n      contactEquationRelaxation: 1,\n      frictionEquationStiffness: 1e7,\n      frictionEquationRelaxation: 2\n    },\n    gravity: [0, -40, 0],\n    allowSleep: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, 0, -10],\n    receiveShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1000, 1000],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    attach: \"material\",\n    color: \"#172017\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ContactGround, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), !welcome && /*#__PURE__*/React.createElement(Ball, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paddle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"startup\",\n    style: {\n      display: welcome ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"* click to start ...\"));\n}","map":{"version":3,"sources":["C:/Users/Z0060883/Downloads/ping-pong-r3f-usecannon-forked/src/App.js"],"names":["Canvas","useFrame","useLoader","Physics","useSphere","useBox","usePlane","create","THREE","GLTFLoader","React","Suspense","useRef","useCallback","lerp","clamp","Text","pingSound","earthImg","ping","Audio","set","count","welcome","api","pong","velocity","currentTime","volume","play","state","reset","useStore","Paddle","nodes","materials","model","type","args","onCollide","e","contact","impactVelocity","ref","values","current","mouse","x","Math","PI","position","y","rotation","toString","Bone","Bone003","Bone006","Bone010","glove","arm","geometry","skeleton","wood","mesh_0","side","mesh_1","foam","mesh_2","lower","mesh_3","upper","mesh_4","Ball","map","TextureLoader","mass","ContactGround","onClick","fov","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","display"],"mappings":"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","sourcesContent":["// react-three-fiber is a way to express threejs declaratively: https://github.com/react-spring/react-three-fiber\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\"\n// use-cannon is a hook around the cannon.js physics library: https://github.com/react-spring/use-cannon\nimport { Physics, useSphere, useBox, usePlane } from \"use-cannon\"\n// zustand is a minimal state-manager: https://github.com/react-spring/zustand\nimport create from \"zustand\"\n\nimport * as THREE from \"three\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport React, { Suspense, useRef, useCallback } from \"react\"\nimport lerp from \"lerp\"\nimport clamp from \"lodash-es/clamp\"\nimport Text from \"./Text\"\nimport pingSound from \"./resources/ping.mp3\"\nimport earthImg from \"./resources/cross.jpg\"\n\n// Create a store ...\nconst ping = new Audio(pingSound)\nconst [useStore] = create((set) => ({\n  count: 0,\n  welcome: true,\n  api: {\n    pong(velocity) {\n      ping.currentTime = 0\n      ping.volume = clamp(velocity / 20, 0, 1)\n      ping.play()\n      if (velocity > 4) set((state) => ({ count: state.count + 1 }))\n    },\n    reset: (welcome) => set((state) => ({ welcome, count: welcome ? state.count : 0 })),\n  },\n}))\n\n// The paddle was made in blender and auto-converted to JSX by https://github.com/react-spring/gltfjsx\nfunction Paddle() {\n  // Load the gltf file\n  const { nodes, materials } = useLoader(GLTFLoader, \"/pingpong.glb\")\n  // Fetch some reactive state\n  const { pong } = useStore((state) => state.api)\n  const welcome = useStore((state) => state.welcome)\n  const count = useStore((state) => state.count)\n  const model = useRef()\n  // Make it a physical object that adheres to gravitation and impact\n  const [ref, api] = useBox(() => ({ type: \"Kinematic\", args: [3.4, 1, 3.5], onCollide: (e) => pong(e.contact.impactVelocity) }))\n  // use-frame allows the component to subscribe to the render-loop for frame-based actions\n  let values = useRef([0, 0])\n  useFrame((state) => {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    values.current[0] = lerp(values.current[0], (state.mouse.x * Math.PI) / 5, 0.2)\n    values.current[1] = lerp(values.current[1], (state.mouse.x * Math.PI) / 5, 0.2)\n    api.position.set(state.mouse.x * 10, state.mouse.y * 5, 0)\n    api.rotation.set(0, 0, values.current[1])\n    // Left/right mouse movement rotates it a liitle for effect only\n    model.current.rotation.x = lerp(model.current.rotation.x, welcome ? Math.PI / 2 : 0, 0.2)\n    model.current.rotation.y = values.current[0]\n  })\n  return (\n    <mesh ref={ref} dispose={null}>\n      <group ref={model} position={[-0.05, 0.37, 0.3]} scale={[0.15, 0.15, 0.15]}>\n        <Text rotation={[-Math.PI / 2, 0, 0]} position={[0, 1, 2]} size={1} children={count.toString()} />\n        <group rotation={[1.88, -0.35, 2.32]} scale={[2.97, 2.97, 2.97]}>\n          <primitive object={nodes.Bone} />\n          <primitive object={nodes.Bone003} />\n          <primitive object={nodes.Bone006} />\n          <primitive object={nodes.Bone010} />\n          <skinnedMesh castShadow receiveShadow material={materials.glove} material-roughness={1} geometry={nodes.arm.geometry} skeleton={nodes.arm.skeleton} />\n        </group>\n        <group rotation={[0, -0.04, 0]} scale={[141.94, 141.94, 141.94]}>\n          <mesh castShadow receiveShadow material={materials.wood} geometry={nodes.mesh_0.geometry} />\n          <mesh castShadow receiveShadow material={materials.side} geometry={nodes.mesh_1.geometry} />\n          <mesh castShadow receiveShadow material={materials.foam} geometry={nodes.mesh_2.geometry} />\n          <mesh castShadow receiveShadow material={materials.lower} geometry={nodes.mesh_3.geometry} />\n          <mesh castShadow receiveShadow material={materials.upper} geometry={nodes.mesh_4.geometry} />\n        </group>\n      </group>\n    </mesh>\n  )\n}\n\nfunction Ball() {\n  // Load texture (the black plus sign)\n  const map = useLoader(THREE.TextureLoader, earthImg)\n  // Make the ball a physics object with a low mass\n  const [ref] = useSphere(() => ({ mass: 1, args: 0.5, position: [0, 5, 0] }))\n  return (\n    <mesh castShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshStandardMaterial attach=\"material\" map={map} />\n    </mesh>\n  )\n}\n\nfunction ContactGround() {\n  // When the ground was hit we reset the game ...\n  const { reset } = useStore((state) => state.api)\n  const [ref] = usePlane(() => ({ type: \"Static\", rotation: [-Math.PI / 2, 0, 0], position: [0, -10, 0], onCollide: () => reset(true) }))\n  return <mesh ref={ref} />\n}\n\nexport default function () {\n  const welcome = useStore((state) => state.welcome)\n  const { reset } = useStore((state) => state.api)\n  const onClick = useCallback(() => welcome && reset(false), [welcome, reset])\n  return (\n    <>\n      <Canvas shadowMap sRGB camera={{ position: [0, 5, 12], fov: 50 }} onClick={onClick}>\n        <color attach=\"background\" args={[\"#171720\"]} />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[-10, -10, -10]} />\n        <spotLight\n          position={[10, 10, 10]}\n          angle={0.3}\n          penumbra={1}\n          intensity={1}\n          castShadow\n          shadow-mapSize-width={2048}\n          shadow-mapSize-height={2048}\n          shadow-bias={-0.0001}\n        />\n        <Physics\n          iterations={20}\n          tolerance={0.0001}\n          defaultContactMaterial={{\n            friction: 0.9,\n            restitution: 0.7,\n            contactEquationStiffness: 1e7,\n            contactEquationRelaxation: 1,\n            frictionEquationStiffness: 1e7,\n            frictionEquationRelaxation: 2,\n          }}\n          gravity={[0, -40, 0]}\n          allowSleep={false}>\n          <mesh position={[0, 0, -10]} receiveShadow>\n            <planeBufferGeometry attach=\"geometry\" args={[1000, 1000]} />\n            <meshPhongMaterial attach=\"material\" color=\"#172017\" />\n          </mesh>\n          <ContactGround />\n          {!welcome && <Ball />}\n          <Suspense fallback={null}>\n            <Paddle />\n          </Suspense>\n        </Physics>\n      </Canvas>\n      <div className=\"startup\" style={{ display: welcome ? \"block\" : \"none\" }}>\n        * click to start ...\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}