{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Facultate\\\\AN3 SEM 2\\\\EGIOC\\\\ping-pong-r3f-usecannon-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"D:\\\\Facultate\\\\AN3 SEM 2\\\\EGIOC\\\\ping-pong-r3f-usecannon-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Facultate\\\\AN3 SEM 2\\\\EGIOC\\\\ping-pong-r3f-usecannon-forked\\\\src\\\\Text.js\";\nimport * as THREE from \"three\";\nimport React, { useMemo } from \"react\";\nimport fontJson from \"./resources/firasans_regular.json\";\nvar font = new THREE.FontLoader().parse(fontJson);\nvar geom = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].map(function (number) {\n  return new THREE.TextGeometry(number, {\n    font: font,\n    size: 5,\n    height: 0.1\n  });\n});\nexport default function Text(_ref) {\n  var _this = this;\n\n  var color = _ref.color,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"color\", \"children\"]);\n\n  var array = useMemo(function () {\n    return _toConsumableArray(children);\n  }, [children]);\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({}, props, {\n    dispose: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), array.map(function (char, index) {\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      position: [-(array.length / 2) * 3.5 + index * 3.5, 0, 0],\n      key: index,\n      geometry: geom[parseInt(char)],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: color,\n      transparent: true,\n      opacity: 0.5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }));\n  }));\n}","map":{"version":3,"sources":["D:/Facultate/AN3 SEM 2/EGIOC/ping-pong-r3f-usecannon-forked/src/Text.js"],"names":["THREE","React","useMemo","fontJson","font","FontLoader","parse","geom","map","number","TextGeometry","size","height","Text","color","children","props","array","char","index","length","parseInt"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AAEA,IAAMC,IAAI,GAAG,IAAIJ,KAAK,CAACK,UAAV,GAAuBC,KAAvB,CAA6BH,QAA7B,CAAb;AACA,IAAMI,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmDC,GAAnD,CAAuD,UAAAC,MAAM;AAAA,SAAI,IAAIT,KAAK,CAACU,YAAV,CAAuBD,MAAvB,EAA+B;AAAEL,IAAAA,IAAI,EAAJA,IAAF;AAAQO,IAAAA,IAAI,EAAE,CAAd;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAA/B,CAAJ;AAAA,CAA7D,CAAb;AAEA,eAAe,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAATC,KAAS;;AAC1D,MAAMC,KAAK,GAAGf,OAAO,CAAC;AAAA,8BAAUa,QAAV;AAAA,GAAD,EAAsB,CAACA,QAAD,CAAtB,CAArB;AACA,sBACE,+CAAWC,KAAX;AAAkB,IAAA,OAAO,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGC,KAAK,CAACT,GAAN,CAAU,UAACU,IAAD,EAAOC,KAAP;AAAA,wBACT;AAAM,MAAA,QAAQ,EAAE,CAAC,EAAEF,KAAK,CAACG,MAAN,GAAe,CAAjB,IAAsB,GAAtB,GAA4BD,KAAK,GAAG,GAArC,EAA0C,CAA1C,EAA6C,CAA7C,CAAhB;AAAiE,MAAA,GAAG,EAAEA,KAAtE;AAA6E,MAAA,QAAQ,EAAEZ,IAAI,CAACc,QAAQ,CAACH,IAAD,CAAT,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,KAAK,EAAEJ,KAA5C;AAAmD,MAAA,WAAW,MAA9D;AAA+D,MAAA,OAAO,EAAE,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADS;AAAA,GAAV,CADH,CADF;AASD","sourcesContent":["import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport fontJson from \"./resources/firasans_regular.json\"\n\nconst font = new THREE.FontLoader().parse(fontJson)\nconst geom = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].map(number => new THREE.TextGeometry(number, { font, size: 5, height: 0.1 }))\n\nexport default function Text({ color, children, ...props }) {\n  const array = useMemo(() => [...children], [children])\n  return (\n    <group {...props} dispose={null}>\n      {array.map((char, index) => (\n        <mesh position={[-(array.length / 2) * 3.5 + index * 3.5, 0, 0]} key={index} geometry={geom[parseInt(char)]}>\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={0.5} />\n        </mesh>\n      ))}\n    </group>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}